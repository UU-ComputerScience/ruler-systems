DATA Program
  | Program
      blocks : BlocksTop

DATA BlocksTop
  | Top
      blocks : Blocks
  | None

TYPE Blocks = [Block]

DATA Block
  | Itf
      itf : Itf
  | Data
      data : Data
  | Section
      code : Code
  | Item
      name : Ident
      item : Item
  | DataSem
      sem  : DataSem

DATA Itf
  | Itf
      pos    : Pos
      name   : Ident
      visits : ItfVisits

TYPE ItfVisits = [ItfVisit]

DATA ItfVisit
  | Visit
      pos    : Pos
      name   : Ident
      attrs  : Attrs

TYPE Attrs = [Attr]

DATA Attr
  | Inh
      name : Ident
      type : String
  | Syn
      name : Ident
      type : String

DATA Data
  | Data
      pos  : Pos
      name : Ident
      cons : Cons

TYPE Cons = [Con]

DATA Con
  | Con
      pos    : Pos
      name   : Ident
      fields : Fields

TYPE Fields = [Field]

DATA Field
  | Field
      name   : Ident
      type   : String

DATA DataSem
  | Sem
      pos     : Pos
      tp      : Ident
      mbMonad : {Maybe String}
      clauses : ClausesTop

TYPE SemCons = [SemCon]

DATA SemCon
  | Con
      pos     : Pos
      name    : Ident
      fields  : SemFields

TYPE SemFields = [SemField]

DATA SemField
  | Field
      pos     : Pos
      name    : Ident
      type    : Ident

DATA Code
  | Code
      items : Items

TYPE MaybeBoundCode = MAYBE BoundCode

DATA BoundCode
  | Code
      bind : Bind
      pos  : Pos
      code : Code

TYPE Items = [Item]

DATA Item
  | Plain
      pos      : Pos
      txt      : String
  | Attr
      pos      : Pos
      child    : Ident
      name     : Ident
  | Sem
      pos      : Pos
      name     : Ident
      tp       : Ident
      mbMonad  : {Maybe String}
      first    : SemVisit
  | CoSem
      pos      : Pos
      name     : Ident
      tp       : Ident
      visit    : Ident
      mbMonad  : {Maybe String}
      first    : SemVisit
  | Detach
      pos      : Pos
      visit    : Ident
      name     : Ident
  | Construct
      pos      : Pos
      data     : Ident
      con      : Ident
      fields   : ExprFields
  | Brackets
      pos      : Pos
      items    : Items
      posEnd   : Pos

TYPE ExprFields = [ExprField]

DATA ExprField
  | Field
      name  : Ident
      code  : Code

DATA SemVisit
  | Visit
      pos      : Pos
      name     : Ident
      attrs    : VisitAttrs
      stmts    : Stmts
      clauses  : ClausesTop
  | End

TYPE VisitAttrs = [VisitAttr]

DATA VisitAttr
  | Chn
      name  : Ident
      type  : String

DATA ClausesTop
  | Top
      clauses : Clauses

TYPE Clauses = [Clause]

DATA Clause
  | Clause
      pos     : Pos
      name    : Ident
      stmts   : Stmts
      next    : SemVisit

TYPE Stmts = [Stmt]

DATA Stmt
  | Eval
      mode    : Mode
      pat     : Pat
      code    : BoundCode
  | Attach
      pos     : Pos
      mbVisit : {Maybe Ident}
      name    : Ident
      type    : Ident
      code    : MaybeBoundCode
  | Invoke
      pos     : Pos
      visit   : Ident
      name    : Ident
      code    : MaybeBoundCode

DATA Mode
  | Match
  | Assert

DATA Bind
  | Fun
  | Monadic

TYPE Pats = [Pat]

DATA Pat
  | Con
      name   : Ident
      pats   : Pats
  | AttrCon
      con    : Ident
      name   : Ident
      dt     : Ident
  | Attr
      child  : Ident
      name   : Ident
  | Tup
      pats   : Pats
  | List
      pats   : Pats
  | Cons
      hd     : Pat
      tl     : Pat
  | Underscore

DATA AttrTypePat
  | VisLocal
  | ProdLocal
  | Lhs
  | Child
  | Visit

DATA AttrTypeCode
  | VisLocal
  | ProdLocal
  | Lhs
  | Child
  | Visit
